#include<iostream>
#include<queue>
using namespace std;
typedef struct Point{
    int x,y,t;
}Point;
queue<Point>q;
char a[301][301];
bool vis[301][301];
int n,m;
int SX,SY,EX,EY;
int dx[]={1,0,-1,0};
int dy[]={0,1,0,-1};
void trans(int&x,int&y)
{
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(a[i][j]==a[x][y]&&!(i==x&&j==y))
            {
                x=i;
                y=j;
                return;
            }
        }
    }
}
int main()
{
    cin>>n>>m;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            cin>>a[i][j];
            if(a[i][j]=='=')
            {
                EX=i;
                EY=j;
            }
            if(a[i][j]=='@')
            {
                SX=i;
                SY=j;
            }
        }
    }
    q.push((Point){SX,SY,0});
    while(!q.empty())
    {
        Point tmp=q.front();
        q.pop();
        if(a[tmp.x][tmp.y]=='=')
        {
            cout<<tmp.t;
            return 0;
        }
        if(isalpha(a[tmp.x][tmp.y]))
        {
            trans(tmp.x,tmp.y);
        }
        for(int i=0;i<4;i++)
        {
            int nx=tmp.x+dx[i];
            int ny=tmp.y+dy[i];
            if(nx>=0&&nx<n&&ny>=0&&ny<m&&a[nx][ny]!='#'&&!vis[nx][ny])
            {
                vis[nx][ny]=true;
                q.push((Point){nx,ny,tmp.t+1});
            }
        }
    }
    
    return 0;
}