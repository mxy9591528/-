#include <iostream>
#include<algorithm>
using namespace std;
const int N=100;
int n,m;
int ans = 0;
int work_list[N*N];
int work_num[N][N];
int work_time[N][N];
int step[N];
int last_time[N];
bool time_line[N*N][N*N];

bool check_line(int begin_time,int end_time,int work_id)
{
    for (int i = begin_time; i <= end_time;i++)
        if (time_line[work_id][i])
            return false;
    return true;    
}

int main()
{
    cin >> m >> n;
    for (int i=1;i<=n*m;i++)
        cin >> work_list[i];

    for (int i=1;i<=n;i++)
        for (int j=1;j<=m;j++)
            cin >> work_num[i][j];

    for (int i=1;i<=n;i++)
        for (int j=1;j<=m;j++)
            cin >> work_time[i][j];

    for (int i=1;i<=n*m;i++)
    {
        int now_item = work_list[i];
        step[now_item]++;
        int now_num = work_num[now_item][step[now_item]];
        int cost_time = work_time[now_item][step[now_item]];
        
        for (int i = last_time[now_item]+1;;i++)
            if (check_line(i,i+cost_time-1,now_num)){
                for (int j = i;j <= i+cost_time-1;j++)
                    time_line[now_num][j] = true;
                last_time[now_item] = i + cost_time - 1;
                break;
            }
    }

    for (int i=1;i<=n;i++)
        ans = max(ans,last_time[i]);

    cout << ans << endl;

    return 0;
}