#include<iostream>
#include<cstdio>
#include<string> 
#include<algorithm>
#include<climits>
#include<map>
using namespace std;

typedef long long ll;
const int MAXN=150;
int n;
struct item
{
	string name,place;
	ll efforts,level,id;
}a[MAXN];
map<string,int> m;

int main()
{
    ios_base::sync_with_stdio(false);
    cin>>n;
    for(int i=0;i<n;i++)
    {
    	a[i].id=i+1;
    	cin>>a[i].name>>a[i].place>>a[i].efforts>>a[i].level;
    	if(a[i].place=="BangZhu")	a[i].efforts=LLONG_MAX;
    	if(a[i].place=="FuBangZhu")	a[i].efforts=LLONG_MAX-1;
	}
	sort(a,a+n,[=](const item&a,const item&b)
	{	
		return a.efforts!=b.efforts?a.efforts>b.efforts:a.id<b.id;	
	});
	for(int i=0;i<n;i++)
	{
		if(i==0)			m[a[i].place="BangZhu"]=1;
		if(1<=i && i<=2)	m[a[i].place="FuBangZhu"]=2;
		if(3<=i && i<=4)	m[a[i].place="HuFa"]=3;
		if(5<=i && i<=8)	m[a[i].place="ZhangLao"]=4;
		if(9<=i && i<=15)	m[a[i].place="TangZhu"]=5;
		if(16<=i && i<=40)	m[a[i].place="JingYing"]=6;
		if(i>40)			m[a[i].place="BangZhong"]=7;
	}
	sort(a,a+n,[=](const item&a,const item&b)
	{
		if(a.place!=b.place)	return m[a.place]<m[b.place];
		if(a.level!=b.level)	return a.level>b.level;
		return a.id<b.id; 
	});
	for(int i=0;i<n;i++)
	 cout<<a[i].name<<" "<<a[i].place<<" "<<a[i].level<<endl;
	return 0;
}